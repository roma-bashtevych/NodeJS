{
  "swagger": "2.0",
  "info": {
    "title": "apr 2021",
    "version": "0.0.1",
    "description": "First project NodeJs",
    "contact": {
      "name": "Roman Bashtevych",
      "email": "roma_bashtevich@ukr.net"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAllUsers",
        "description": "get all user",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "description": "How many users will show in page",
            "default": 10,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "default": 1,
            "type": "number"
          },
          {
            "name": "name",
            "in": "query",
            "description": "user name",
            "default": "roman",
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "user email",
            "default": "roma@gmail.com",
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "user role",
            "default": "user",
            "type": "array",
            "enum": ["user", "admin"]
          },
          {
            "name": "order",
            "in": "query",
            "description": "order",
            "default": "asc",
            "type": "array",
            "enum": ["asc", "desc"]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort by",
            "default": "createdAt",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All users info arr",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleUser"
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "description": "Create user",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "Roman",
            "description": "User name"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "roman.doe@example.com",
            "description": "User email"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "User password"
          },
          {
            "name": "role",
            "in": "formData",
            "type": "string",
            "description": "User role"
          },
          {
            "name": "avatar",
            "in": "formData",
            "type": "file",
            "description": "User avatar"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "patch": {
        "tags": [
          "users/id"
        ],
        "description": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user will be delete"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "default": "Roman",
            "description": "User name"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "default": "roman.doe@example.com",
            "description": "User email"
          },
          {
            "name": "avatar",
            "in": "formData",
            "type": "file",
            "description": "User avatar"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "default": "access_token"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users/id"
        ],
        "description": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user will be delete"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "default": "access_token"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": [
          "cars"
        ],
        "operationId": "getAllCars",
        "description": "get all cars",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "description": "How many cars will show in page",
            "default": 10,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "default": 1,
            "type": "number"
          },
          {
            "name": "order",
            "in": "query",
            "description": "order",
            "default": "asc",
            "type": "array",
            "enum": ["asc", "desc"]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sort by",
            "default": "createdAt",
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "default": "bmw",
            "type": "string",
            "description": "How many cars will be returned"
          },
          {
            "name": "yearFrom",
            "in": "formData",
            "type": "number",
            "description": "car from year"
          },
          {
            "name": "yearTo",
            "in": "formData",
            "type": "number",
            "description": "car to year"
          },
          {
            "name": "priceFrom",
            "in": "formData",
            "type": "number",
            "description": "car from price"
          },
          {
            "name": "priceTo",
            "in": "formData",
            "type": "number",
            "description": "car to price"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleCar"
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "post": {
        "tags": [
          "cars"
        ],
        "description": "Create car",
        "operationId": "createCar",
        "parameters": [
          {
            "name": "model",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "bmw",
            "description": "car model"
          },
          {
            "name": "year",
            "in": "formData",
            "type": "number",
            "description": "car year"
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number",
            "description": "car price"
          }
        ],
        "responses": {
          "200": {
            "description": "car was created",
            "schema": {
              "$ref": "#/definitions/singleCar"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorCar"
            }
          }
        }
      }
    },
    "/cars/{cars_id}": {
      "patch": {
        "tags": [
          "cars/id"
        ],
        "description": "Update car",
        "operationId": "updateCar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user will be delete"
          },
          {
            "name": "model",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "type": "number"
          },
          {
            "name": "year",
            "in": "formData",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "car was updated",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cars/id"
        ],
        "description": "Delete car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "car will be delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Car was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    }
      },
  "definitions": {
    "errorSchema": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message",
          "example": "Email or password is wrong"
        },
        "code": {
          "description": "custom code",
          "example": 200,
          "type": "number"
        }
      }
    },
    "singleUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "err789jsjs78iuis8"
        },
        "email": {
          "type": "string",
          "example": "admin_email@example.com"
        }
      }
    },
    "singleCar": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "err789jsjs78iuis8"
        },
        "model": {
          "type": "string",
          "example": "bmw"
        }
      }
    }
  }
}
